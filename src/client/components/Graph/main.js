import React,  { Component } from 'react';

import styles from '../../styles/Graph.scss';

import * as d3 from 'd3';
import * as d3Graphviz from 'd3-graphviz';

const graph = `digraph " " { graph [splines=ortho ranksep="2" nodesep="2"  bgcolor="#232323"] rankdir=LR node [shape=plain fillcolor="#393E41" style=filled fontcolor="#12cc12" fontname="Courier"] /* START block 0 */0 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x0</TD><TD>PUSH1</TD><TD>0x80</TD></TR><TR><TD>0x2</TD><TD>PUSH1</TD><TD>0x40</TD></TR><TR><TD>0x4</TD><TD>MSTORE</TD></TR><TR><TD>0x5</TD><TD>PUSH1</TD><TD>0x4</TD></TR><TR><TD>0x7</TD><TD>CALLDATASIZE</TD></TR><TR><TD>0x8</TD><TD>LT</TD></TR><TR><TD>0x9</TD><TD>PUSH1</TD><TD>0x49</TD></TR><TR><TD>0xb</TD><TD>JUMPI</TD></TR></TABLE> >]0 -> 73 0 -> 12 /* END block 0 *//* START block 12 */12 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0xc</TD><TD>PUSH1</TD><TD>0x0</TD></TR><TR><TD>0xe</TD><TD>CALLDATALOAD</TD></TR><TR><TD>0xf</TD><TD>PUSH29</TD><TD>0x100000000000000000000000000000000000000000000000000000000</TD></TR><TR><TD>0x2d</TD><TD>SWAP1</TD></TR><TR><TD>0x2e</TD><TD>DIV</TD></TR><TR><TD>0x2f</TD><TD>PUSH4</TD><TD>0xffffffff</TD></TR><TR><TD>0x34</TD><TD>AND</TD></TR><TR><TD>0x35</TD><TD>DUP1</TD></TR><TR><TD>0x36</TD><TD>PUSH4</TD><TD>0x60fe47b1</TD></TR><TR><TD>0x3b</TD><TD>EQ</TD></TR><TR><TD>0x3c</TD><TD>PUSH1</TD><TD>0x4e</TD></TR><TR><TD>0x3e</TD><TD>JUMPI</TD></TR></TABLE> >]12 -> 78 12 -> 63 /* END block 12 *//* START block 63 */63 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x3f</TD><TD>DUP1</TD></TR><TR><TD>0x40</TD><TD>PUSH4</TD><TD>0x6d4ce63c</TD></TR><TR><TD>0x45</TD><TD>EQ</TD></TR><TR><TD>0x46</TD><TD>PUSH1</TD><TD>0x78</TD></TR><TR><TD>0x48</TD><TD>JUMPI</TD></TR></TABLE> >]63 -> 120 63 -> 73 /* END block 63 *//* START block 73 */73 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x49</TD><TD>JUMPDEST</TD></TR><TR><TD>0x4a</TD><TD>PUSH1</TD><TD>0x0</TD></TR><TR><TD>0x4c</TD><TD>DUP1</TD></TR><TR><TD>0x4d</TD><TD>REVERT</TD></TR></TABLE> >]/* END block 73 *//* START block 78 */78 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x4e</TD><TD>JUMPDEST</TD></TR><TR><TD>0x4f</TD><TD>CALLVALUE</TD></TR><TR><TD>0x50</TD><TD>DUP1</TD></TR><TR><TD>0x51</TD><TD>ISZERO</TD></TR><TR><TD>0x52</TD><TD>PUSH1</TD><TD>0x59</TD></TR><TR><TD>0x54</TD><TD>JUMPI</TD></TR></TABLE> >]78 -> 89 78 -> 85 /* END block 78 *//* START block 85 */85 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x55</TD><TD>PUSH1</TD><TD>0x0</TD></TR><TR><TD>0x57</TD><TD>DUP1</TD></TR><TR><TD>0x58</TD><TD>REVERT</TD></TR></TABLE> >]/* END block 85 *//* START block 89 */89 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x59</TD><TD>JUMPDEST</TD></TR><TR><TD>0x5a</TD><TD>POP</TD></TR><TR><TD>0x5b</TD><TD>PUSH1</TD><TD>0x76</TD></TR><TR><TD>0x5d</TD><TD>PUSH1</TD><TD>0x4</TD></TR><TR><TD>0x5f</TD><TD>DUP1</TD></TR><TR><TD>0x60</TD><TD>CALLDATASIZE</TD></TR><TR><TD>0x61</TD><TD>SUB</TD></TR><TR><TD>0x62</TD><TD>DUP2</TD></TR><TR><TD>0x63</TD><TD>ADD</TD></TR><TR><TD>0x64</TD><TD>SWAP1</TD></TR><TR><TD>0x65</TD><TD>DUP1</TD></TR><TR><TD>0x66</TD><TD>DUP1</TD></TR><TR><TD>0x67</TD><TD>CALLDATALOAD</TD></TR><TR><TD>0x68</TD><TD>SWAP1</TD></TR><TR><TD>0x69</TD><TD>PUSH1</TD><TD>0x20</TD></TR><TR><TD>0x6b</TD><TD>ADD</TD></TR><TR><TD>0x6c</TD><TD>SWAP1</TD></TR><TR><TD>0x6d</TD><TD>SWAP3</TD></TR><TR><TD>0x6e</TD><TD>SWAP2</TD></TR><TR><TD>0x6f</TD><TD>SWAP1</TD></TR><TR><TD>0x70</TD><TD>POP</TD></TR><TR><TD>0x71</TD><TD>POP</TD></TR><TR><TD>0x72</TD><TD>POP</TD></TR><TR><TD>0x73</TD><TD>PUSH1</TD><TD>0xa0</TD></TR><TR><TD>0x75</TD><TD>JUMP</TD></TR></TABLE> >]89 -> 160 /* END block 89 *//* START block 118 */118 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x76</TD><TD>JUMPDEST</TD></TR><TR><TD>0x77</TD><TD>STOP</TD></TR></TABLE> >]/* END block 118 *//* START block 120 */120 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x78</TD><TD>JUMPDEST</TD></TR><TR><TD>0x79</TD><TD>CALLVALUE</TD></TR><TR><TD>0x7a</TD><TD>DUP1</TD></TR><TR><TD>0x7b</TD><TD>ISZERO</TD></TR><TR><TD>0x7c</TD><TD>PUSH1</TD><TD>0x83</TD></TR><TR><TD>0x7e</TD><TD>JUMPI</TD></TR></TABLE> >]120 -> 131 120 -> 127 /* END block 120 *//* START block 127 */127 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x7f</TD><TD>PUSH1</TD><TD>0x0</TD></TR><TR><TD>0x81</TD><TD>DUP1</TD></TR><TR><TD>0x82</TD><TD>REVERT</TD></TR></TABLE> >]/* END block 127 *//* START block 131 */131 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x83</TD><TD>JUMPDEST</TD></TR><TR><TD>0x84</TD><TD>POP</TD></TR><TR><TD>0x85</TD><TD>PUSH1</TD><TD>0x8a</TD></TR><TR><TD>0x87</TD><TD>PUSH1</TD><TD>0xaa</TD></TR><TR><TD>0x89</TD><TD>JUMP</TD></TR></TABLE> >]131 -> 170 /* END block 131 *//* START block 138 */138 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0x8a</TD><TD>JUMPDEST</TD></TR><TR><TD>0x8b</TD><TD>PUSH1</TD><TD>0x40</TD></TR><TR><TD>0x8d</TD><TD>MLOAD</TD></TR><TR><TD>0x8e</TD><TD>DUP1</TD></TR><TR><TD>0x8f</TD><TD>DUP3</TD></TR><TR><TD>0x90</TD><TD>DUP2</TD></TR><TR><TD>0x91</TD><TD>MSTORE</TD></TR><TR><TD>0x92</TD><TD>PUSH1</TD><TD>0x20</TD></TR><TR><TD>0x94</TD><TD>ADD</TD></TR><TR><TD>0x95</TD><TD>SWAP2</TD></TR><TR><TD>0x96</TD><TD>POP</TD></TR><TR><TD>0x97</TD><TD>POP</TD></TR><TR><TD>0x98</TD><TD>PUSH1</TD><TD>0x40</TD></TR><TR><TD>0x9a</TD><TD>MLOAD</TD></TR><TR><TD>0x9b</TD><TD>DUP1</TD></TR><TR><TD>0x9c</TD><TD>SWAP2</TD></TR><TR><TD>0x9d</TD><TD>SUB</TD></TR><TR><TD>0x9e</TD><TD>SWAP1</TD></TR><TR><TD>0x9f</TD><TD>RETURN</TD></TR></TABLE> >]/* END block 138 *//* START block 160 */160 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0xa0</TD><TD>JUMPDEST</TD></TR><TR><TD>0xa1</TD><TD>DUP1</TD></TR><TR><TD>0xa2</TD><TD>PUSH1</TD><TD>0x0</TD></TR><TR><TD>0xa4</TD><TD>DUP2</TD></TR><TR><TD>0xa5</TD><TD>SWAP1</TD></TR><TR><TD>0xa6</TD><TD>SSTORE</TD></TR><TR><TD>0xa7</TD><TD>POP</TD></TR><TR><TD>0xa8</TD><TD>POP</TD></TR><TR><TD>0xa9</TD><TD>JUMP</TD></TR></TABLE> >]160 -> 118 /* END block 160 *//* START block 170 */170 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0xaa</TD><TD>JUMPDEST</TD></TR><TR><TD>0xab</TD><TD>PUSH1</TD><TD>0x0</TD></TR><TR><TD>0xad</TD><TD>DUP1</TD></TR><TR><TD>0xae</TD><TD>SLOAD</TD></TR><TR><TD>0xaf</TD><TD>SWAP1</TD></TR><TR><TD>0xb0</TD><TD>POP</TD></TR><TR><TD>0xb1</TD><TD>SWAP1</TD></TR><TR><TD>0xb2</TD><TD>JUMP</TD></TR></TABLE> >]170 -> 138 /* END block 170 *//* START block 179 */179 [label=< <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD>0xb3</TD><TD>STOP</TD></TR></TABLE> >]/* END block 179 */ }`;

class Graph extends React.Component {
  constructor() {
    super();
  }

  componentDidMount() {
    d3.select(".graph").graphviz().renderDot(graph);
  }

  render() {
    return (
      <div className={styles['graph-container']}>
        <div className='graph'></div>
      </div>
    );
  }
}

export default Graph;